{"version":3,"sources":["component/Button.js","component/Header.js","component/Task.js","component/Tasks.js","component/AddTask.js","component/Footer.js","component/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","Header","head","onAdd","showTask","location","useLocation","headingStyle","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","onTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","onChange","target","value","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","DeleteTask","a","fetch","method","filter","toggleReminder","fetchTask","taskToToggle","updTask","headers","body","JSON","stringify","res","json","data","addTask","Math","floor","random","newTask","useEffect","fetchTasks","tasksFromServer","getTasks","path","exact","render","props","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0616e18d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n\r\n    return (\r\n        <button className='btn' style={{backgroundColor:color}} onClick={onClick}>{text}</button>\r\n    )\r\n}\r\n\r\n// Button.defaultProps={\r\n//     color:'blue',\r\n//     text:'hello'\r\n// }\r\nButton.propTypes = {\r\n    color:PropTypes.string.isRequired,\r\n    text:PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nexport const Header = ({head,onAdd,showTask}) => {\r\n    const location = useLocation()\r\n \r\n    return (\r\n        <header className='header'>\r\n            <h1 style={headingStyle}>todo List </h1>\r\n            {\r\n                location.pathname === '/' && \r\n               ( <Button text={showTask?'Close':'Add'} color={showTask?'red':'green'} onClick={onAdd} />)}\r\n        </header>\r\n    )\r\n}\r\nconst headingStyle={\r\n    color:'red'\r\n}\r\n// Header.defaultProps={\r\n//     head:\"2\"\r\n// }\r\n// Header.propTypes={\r\n//     head:PropTypes.string.isRequired,\r\n// }","import {FaTimes} from 'react-icons/fa';\r\n\r\n\r\nconst Task = ({task,onDelete,onToggle}) => {\r\n   \r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder':''} `} onDoubleClick={()=>onToggle(task.id)}>\r\n           <h3>{task.text}<FaTimes style={{color:'red',cursor:'pointer'}} onClick={()=>onDelete(task.id)}/></h3>\r\n           <h3>{task.day}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import {useState} from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n  \r\n  \r\n    return (\r\n        <>\r\n        {\r\n            tasks.map((task,index)=>(\r\n               <Task key={index}  task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add  task\");\r\n      return;\r\n    }\r\n    onTask({ text, day, reminder });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"add-form\" onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label>Task</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Task\"\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>Day&Time</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Day & Time\"\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-control form-control-check\">\r\n          <label>Set Reminder</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={reminder}\r\n            checked={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Cppyright  &copy; 2021 </p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom'\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>About Us</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import \"./App.css\";\nimport { Header } from \"./component/Header\";\nimport { useState, useEffect } from \"react\";\nimport Tasks from \"./component/Tasks\";\nimport AddTask from \"./component/AddTask\";\nimport Footer from \"./component/Footer\";\nimport About from \"./component/About\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  //delet task\n  const DeleteTask = async (id) => {\n    await fetch(\n      `https://my-json-server.typicode.com/marinaBergas/TodoList/tasks/${id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //oggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(\n      `https://my-json-server.typicode.com/marinaBergas/TodoList/tasks/${id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      }\n    );\n\n    const data = await res.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch(\n      \"https://my-json-server.typicode.com/marinaBergas/TodoList/tasks\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      }\n    );\n    const data = await res.json();\n    setTasks([...tasks, data]);\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  useEffect(() => {\n    //get fethch\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\n      \"https://my-json-server.typicode.com/marinaBergas/TodoList/tasks\"\n    );\n    const data = await res.json();\n    return data;\n  };\n  //fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(\n      `https://my-json-server.typicode.com/marinaBergas/TodoList/tasks/${id}`\n    );\n    const data = await res.json();\n    return data;\n  };\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch(\n        \"https://my-json-server.typicode.com/marinaBergas/TodoList/tasks\"\n      );\n      const data = await res.json();\n      //console.log(data)\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header\n            onAdd={() => setShowAddTask(!showAddTask)}\n            showTask={showAddTask}\n          />\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <>\n                {showAddTask && <AddTask onTask={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={DeleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  \"No Tasks To Show\"\n                )}\n              </>\n            )}\n          />\n          <About />\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}